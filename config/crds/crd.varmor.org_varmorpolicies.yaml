---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: varmorpolicies.crd.varmor.org
spec:
  group: crd.varmor.org
  names:
    kind: VarmorPolicy
    listKind: VarmorPolicyList
    plural: varmorpolicies
    shortNames:
    - vpol
    singular: varmorpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.policy.enforcer
      name: ENFORCER
      type: string
    - jsonPath: .spec.policy.mode
      name: MODE
      type: string
    - jsonPath: .spec.target.kind
      name: TARGET-KIND
      type: string
    - jsonPath: .spec.target.name
      name: TARGET-NAME
      type: string
    - jsonPath: .spec.target.selector
      name: TARGET-SELECTOR
      type: string
    - jsonPath: .status.profileName
      name: PROFILE-NAME
      type: string
    - jsonPath: .status.ready
      name: READY
      type: boolean
    - jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VarmorPolicy is the Schema for the varmorpolicies API
          VarmorPolicy is a namespaced security policy for hardening the workloads in the same namespace.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec describes the desired policy to be used for hardening
              the target workloads.
            properties:
              policy:
                description: policy specifies which enforcer, mode and rules you want
                  to use to apply to the target.
                properties:
                  defenseInDepth:
                    description: defenseInDepth configures the DefenseInDepth mode.
                    properties:
                      allowViolations:
                        description: |-
                          allowViolations determines whether to allow the actions that are against mandatory access control rules.
                          If this field is set, any detected violation will be allowed rather than blocked, and an `ALLOWED` audit
                          event will be generated and logged. This can be used to gather violations for improving Deny-by-Default
                          protection profiles. If this field is not set, any detected violation will be blocked, and a `DENIED`
                          audit event will be generated and logged.

                          Default is false.
                        type: boolean
                      appArmor:
                        description: appArmor specifies the AppArmor profile and additional
                          custom rules for the Deny-by-Default protection.
                        properties:
                          appArmorRawRules:
                            description: |-
                              appArmorRawRules specifies custom AppArmor rules. These rules will be added to the end of the
                              AppArmor profile that you specified.
                            items:
                              properties:
                                rules:
                                  description: |-
                                    rules defines the custom AppArmor rules. You should ensure they conform to AppArmor syntax on
                                    your own.
                                  type: string
                                targets:
                                  description: |-
                                    targets specifies the executable files for which the rules apply. They must be specified as
                                    full paths to the executable files.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - rules
                              type: object
                            type: array
                          customProfile:
                            description: |-
                              customProfile holds the user-defined AppArmor profile content. It must be a valid profile that
                              conforms to AppArmor syntax. If you want vArmor to apply the profile to target workloads automatically,
                              the profile's name must match the ArmorProfile object name. For example:

                              abi <abi/3.0>,
                              #include <tunables/global>
                              profile varmor-demo-demo-4 flags=(attach_disconnected,mediate_deleted) {
                                #include <abstractions/base>
                                file,
                                network,
                              }

                              The profile name "varmor-demo-demo-4" is identical to the ArmorProfile object name.
                            type: string
                          profileType:
                            description: |-
                              profileType indicates which kind of AppArmor profile will be applied. Valid options are:
                              BehaviorModel - a profile generated via the BehaviorModeling mode will be used.
                              Custom - a custom profile defined in the customProfile field will be used.
                            type: string
                        required:
                        - profileType
                        type: object
                      seccomp:
                        description: seccomp specifies the Seccomp profile and additional
                          custom rules for the Deny-by-Default protection.
                        properties:
                          customProfile:
                            description: |-
                              customProfile holds the user-defined Seccomp profile content. It must be a valid profile that
                              adheres to Seccomp syntax.
                              See https://github.com/opencontainers/runtime-spec/blob/main/config-linux.md#seccomp
                            type: string
                          profileType:
                            description: |-
                              profileType indicates which kind of Seccomp profile will be applied. Valid options are:
                              BehaviorModel - a profile generated via the BehaviorModeling mode will be used.
                              Custom - a custom profile defined in the customProfile field will be used.
                            type: string
                          syscallRawRules:
                            description: |-
                              syscallRawRules specifies custom Seccomp rules. These rules will be added to the end of the
                              Seccomp profile that you specified.
                            items:
                              description: LinuxSyscall is used to match a syscall
                                in Seccomp
                              properties:
                                action:
                                  description: LinuxSeccompAction taken upon Seccomp
                                    rule match
                                  type: string
                                args:
                                  items:
                                    description: LinuxSeccompArg used for matching
                                      specific syscall arguments in Seccomp
                                    properties:
                                      index:
                                        type: integer
                                      op:
                                        description: LinuxSeccompOperator used to
                                          match syscall arguments in Seccomp
                                        type: string
                                      value:
                                        format: int64
                                        type: integer
                                      valueTwo:
                                        format: int64
                                        type: integer
                                    required:
                                    - index
                                    - op
                                    - value
                                    type: object
                                  type: array
                                errnoRet:
                                  type: integer
                                names:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - action
                              - names
                              type: object
                            type: array
                        required:
                        - profileType
                        type: object
                    type: object
                  enforcer:
                    description: |-
                      enforcer is used to specify which LSM to use for mandatory access control.
                      Available values: AppArmor, BPF, Seccomp, AppArmorBPF, AppArmorSeccomp, BPFSeccomp, AppArmorBPFSeccomp
                    type: string
                  enhanceProtect:
                    description: |-
                      enhanceProtect configures the EnhanceProtect mode. It allows you to select built-in and custom rules to
                      generate profiles for workload protection and control the behavior of generated profiles (e.g., audit or allow
                      violations)
                    properties:
                      allowViolations:
                        description: |-
                          allowViolations determines whether to allow the actions that are against mandatory access control rules.
                          If this field is set, any detected violation will be allowed rather than blocked, and an `ALLOWED` audit
                          event will be generated and logged.

                          Default is false.
                        type: boolean
                      appArmorRawRules:
                        description: appArmorRawRules is used to set custom AppArmor
                          rules.
                        items:
                          properties:
                            rules:
                              description: |-
                                rules defines the custom AppArmor rules. You should ensure they conform to AppArmor syntax on
                                your own.
                              type: string
                            targets:
                              description: |-
                                targets specifies the executable files for which the rules apply. They must be specified as
                                full paths to the executable files.
                              items:
                                type: string
                              type: array
                          required:
                          - rules
                          type: object
                        type: array
                      attackProtectionRules:
                        description: attackProtectionRules are used to specify the
                          built-in attack protection rules.
                        items:
                          properties:
                            rules:
                              description: rules is the list of built-in attack protection
                                rules to be used.
                              items:
                                type: string
                              type: array
                            targets:
                              description: |-
                                targets specifies the executable files for which the rules apply.
                                They must be specified as full paths to the executable files.
                                This feature is only effective when using AppArmor enforcer.
                              items:
                                type: string
                              type: array
                          required:
                          - rules
                          type: object
                        type: array
                      auditViolations:
                        description: |-
                          auditViolations determines whether to audit the actions that violate the mandatory access control rules.
                          If this field is set, any detected violation will be logged to `/var/log/varmor/violations.log` file in
                          the host. Please note that the Seccomp enforcer does not support auditing violations when the
                          allowViolations field is set to `false`.

                          Default is false.
                        type: boolean
                      bpfRawRules:
                        description: bpfRawRules is used to set custom BPF rules.
                        properties:
                          files:
                            description: files specifies the file access control rules.
                            items:
                              properties:
                                pattern:
                                  description: |-
                                    pattern can be any string (maximum length 128 bytes) that conforms to the policy syntax,
                                    used for matching file paths and filenames.
                                  type: string
                                permissions:
                                  description: |-
                                    permissions are used to specify the file permissions.

                                    Available values: all(*), read(r), write(w), exec(x), append(a)
                                  items:
                                    type: string
                                  type: array
                                qualifiers:
                                  description: |-
                                    qualifiers determine the behavior of the rule.

                                    Available values: deny, audit.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - pattern
                              - permissions
                              type: object
                            type: array
                          mounts:
                            description: mounts specifies mount point access control
                              rules.
                            items:
                              properties:
                                flags:
                                  description: |-
                                    flags are used to specify the mount flags to enforce. They are almost the same as the 'MOUNT FLAGS LIST' of AppArmor.

                                    Available values:
                                          All Flags: all(*)
                                      Command Flags: ro(r, read-only), rw(w), suid, nosuid, dev, nodev, exec, noexec,
                                                     sync, async, mand, nomand, dirsync, atime, noatime, diratime, nodiratime,
                                                     silent, loud, relatime, norelatime, iversion, noiversion, strictatime,
                                                     nostrictatime
                                      Generic Flags: remount, bind(B), move(M), rbind(R), make-unbindable, make-private(private),
                                                     make-slave(slave), make-shared(shared), make-runbindable, make-rprivate,
                                                     make-rslave, make-rshared
                                        Other Flags: umount
                                  items:
                                    type: string
                                  type: array
                                fstype:
                                  description: fstype is used to specify the type
                                    of filesystem (maximum length 16 bytes) to enforce.
                                    It can be '*' to match any type.
                                  type: string
                                qualifiers:
                                  description: |-
                                    qualifiers determine the behavior of the rule.

                                    Available values: deny, audit.
                                  items:
                                    type: string
                                  type: array
                                sourcePattern:
                                  description: |-
                                    sourcePattern can be any string (maximum length 128 bytes) that conforms to the policy syntax, used for matching the
                                    source paramater of mount(2), the target paramater of umount(2), and the from_pathname paramater of move_mount(2).
                                  type: string
                              required:
                              - flags
                              - fstype
                              - sourcePattern
                              type: object
                            type: array
                          network:
                            description: network specifies the network access control
                              rules.
                            properties:
                              egress:
                                description: |-
                                  egress defines network egress rules to match traffic for connect(2) operations.
                                  Notes:
                                  - The ToDestinations, ToServices, and ToPods fields are in a logical OR relationship.
                                  - Within the same field, multiple rules are also in a logical OR relationship.
                                  - Overlapping rules targeting the same Pod/Service/IP may cause unintended port combinations or conflicts.
                                  - The system does not guarantee deduplication or conflict resolution for overlapping targets. Users must ensure that
                                  rules within these fields do not repeatedly define the same Pod/Service/IP to avoid unpredictable traffic control behavior.
                                properties:
                                  toDestinations:
                                    description: |-
                                      toDestinations describes specific IPs or IP blocks with ports to match traffic.
                                      Please ensure each IP/CIDR target is unique to avoid configuration ambiguity.
                                    items:
                                      properties:
                                        cidr:
                                          description: cidr defines this rule on a
                                            particular CIDR. Note that the ip field
                                            and cidr field are mutually exclusive.
                                          type: string
                                        ip:
                                          description: |-
                                            ip defines this rule on a particular IP. Please use a valid textual representation of an IP, or special
                                            entities like "pod-self", "unspecified" or "localhost". Note that the ip field and cidr field are mutually exclusive.
                                          type: string
                                        ports:
                                          description: |-
                                            ports defines this rule on particular ports. Each item in this list is combined using a logical OR.
                                            If this field is empty or not present, this rule matches all ports. If this field is present and contains
                                            at least one item, then this rule matches all ports in the list.
                                          items:
                                            description: Port describes a port or
                                              port range to match traffic.
                                            properties:
                                              endPort:
                                                description: |-
                                                  If endPort is set, it indicates that the range of ports from port to endPort. The endPort must be equal or greater
                                                  than port and must be in the range [1, 65535].
                                                type: integer
                                              port:
                                                description: port is the port number
                                                  to match traffic. The port number
                                                  must be in the range [1, 65535].
                                                type: integer
                                            required:
                                            - port
                                            type: object
                                          type: array
                                        qualifiers:
                                          description: |-
                                            qualifiers determine the behavior of the rule.

                                            Available values: deny, audit.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  toPods:
                                    description: |-
                                      toPods describes pods with ports to match traffic.
                                      Please ensure selectors across pod rules do NOT overlap. Overlapping rules may cause undefined behavior.
                                    items:
                                      properties:
                                        namespace:
                                          description: namespace specifies in which
                                            namespace to select pods.
                                          type: string
                                        podSelector:
                                          description: |-
                                            podSelector is a label selector which selects pods. This field follows standard label selector semantics.
                                            It selects the pods matching podSelector in the namespace. If the namespace field is empty or not present,
                                            it selects the pods matching podSelector in all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        ports:
                                          description: |-
                                            ports define this rule on particular ports. Each item in this list is combined using a logical OR.
                                            If this field is empty or not present, this rule matches all ports. If this field is present and contains
                                            at least one item, then this rule matches all ports in the list.
                                          items:
                                            description: Port describes a port or
                                              port range to match traffic.
                                            properties:
                                              endPort:
                                                description: |-
                                                  If endPort is set, it indicates that the range of ports from port to endPort. The endPort must be equal or greater
                                                  than port and must be in the range [1, 65535].
                                                type: integer
                                              port:
                                                description: port is the port number
                                                  to match traffic. The port number
                                                  must be in the range [1, 65535].
                                                type: integer
                                            required:
                                            - port
                                            type: object
                                          type: array
                                        qualifiers:
                                          description: |-
                                            qualifiers determine the behavior of the rule.

                                            Available values: deny, audit.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - podSelector
                                      type: object
                                    type: array
                                  toServices:
                                    description: |-
                                      toServices describes k8s services and their endpoints to match traffic.
                                      Please ensure selectors across service rules do NOT overlap. Overlapping rules may cause undefined behavior.
                                    items:
                                      properties:
                                        name:
                                          description: name selects a service by the
                                            name and namespace pair.
                                          type: string
                                        namespace:
                                          description: namespace specifies in which
                                            namespace to select services.
                                          type: string
                                        qualifiers:
                                          description: |-
                                            qualifiers determine the behavior of the rule.

                                            Available values: deny, audit.
                                          items:
                                            type: string
                                          type: array
                                        serviceSelector:
                                          description: |-
                                            serviceSelector is a label selector which selects services. This field follows standard label selector
                                            semantics. It selects the services matching serviceSelector in the namespace. If the namespace field
                                            is empty or not present, it selects the services matching serviceSelector in all namespaces. Note that
                                            the serviceSelector field and name field are mutually exclusive.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    type: array
                                type: object
                              sockets:
                                description: sockets are the list of network socket
                                  rules to match traffic for socket(2) operations.
                                items:
                                  description: NetworkSocketRule describes a network
                                    socket rule to match traffic for socket(2) operations.
                                  properties:
                                    domains:
                                      description: |-
                                        domains specifies the communication domains of socket.

                                        Available values:
                                              all(*), unix, inet, ax25, ipx, appletalk, netrom, bridge, atmpvc, x25,
                                              inet6, rose, netbeui, security, key, netlink, packet, ash, econet, atmsvc,
                                              rds, sna, irda, pppox, wanpipe, llc, ib, mpls, can, tipc, bluetooth, iucv,
                                              rxrpc, isdn, phonet, ieee802154, caif, alg, nfc, vsock, kcm, qipcrtr, smc,
                                              xdp, mctp
                                      items:
                                        type: string
                                      type: array
                                    protocols:
                                      description: |-
                                        protocols specifies the particular protocols to be used with the socket.
                                        Note that the protocols field and types field are mutually exclusive.

                                        Available values: all(*), icmp, tcp, udp
                                      items:
                                        type: string
                                      type: array
                                    qualifiers:
                                      description: |-
                                        qualifiers determine the behavior of the rule.

                                        Available values: deny, audit.
                                      items:
                                        type: string
                                      type: array
                                    types:
                                      description: |-
                                        types specifies the communication semantics of socket.

                                        Available values: all(*), stream, dgram, raw, rdm, seqpacket, dccp, packet
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          processes:
                            description: processes specifies the process access control
                              rules.
                            items:
                              properties:
                                pattern:
                                  description: |-
                                    pattern can be any string (maximum length 128 bytes) that conforms to the policy syntax,
                                    used for matching file paths and filenames.
                                  type: string
                                permissions:
                                  description: |-
                                    permissions are used to specify the file permissions.

                                    Available values: all(*), read(r), write(w), exec(x), append(a)
                                  items:
                                    type: string
                                  type: array
                                qualifiers:
                                  description: |-
                                    qualifiers determine the behavior of the rule.

                                    Available values: deny, audit.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - pattern
                              - permissions
                              type: object
                            type: array
                          ptrace:
                            description: ptrace specifies the ptrace-based access
                              control rules.
                            properties:
                              permissions:
                                description: |-
                                  permissions are used to indicate which ptrace-related permissions of the target container should be restricted.

                                  Available values: all(*), trace, traceby, read, readby.
                                     - trace: prohibiting tracing of other processes.
                                     - read: prohibiting reading of other processes.
                                     - traceby: prohibiting being traced by other processes (excluding the host processes).
                                     - readby: prohibiting being read by other processes (excluding the host processes).

                                   The trace, traceby permissions for "write" operations, or other operations that are more dangerous, such as:
                                   ptrace attaching (PTRACE_ATTACH) to another process or calling process_vm_writev(2).

                                   The read, readby permissions for "read" operations or other operations that are less dangerous, such as:
                                   get_robust_list(2); kcmp(2); reading /proc/pid/auxv, /proc/pid/environ, or /proc/pid/stat; or readlink(2)
                                   of a /proc/pid/ns/* file.
                                items:
                                  type: string
                                type: array
                              qualifiers:
                                description: |-
                                  qualifiers determine the behavior of the rule.

                                  Available values: deny, audit.
                                items:
                                  type: string
                                type: array
                              strictMode:
                                description: |-
                                  strictMode is used to indicate whether to restrict ptrace operations for all source and destination processes.
                                  Default is false.
                                  If set to false, it allows a process to perform trace and read operations on other processes within the same container,
                                  and also allows a process to be subjected to traceby and readby operations by other processes within the same container.
                                  If set to true, it prohibits all trace, read, traceby, and readby operations within the container.
                                type: boolean
                            required:
                            - permissions
                            type: object
                        type: object
                      hardeningRules:
                        description: hardeningRules are used to specify the built-in
                          hardening rules.
                        items:
                          type: string
                        type: array
                      privileged:
                        description: |-
                          privileged is used to identify whether the policy is for the privileged container.
                          If set to `false`, the EnhanceProtect mode will build AppArmor or BPF profile on
                          top of the RuntimeDefault mode. Otherwise, it will build AppArmor or BPF profile on top of the AlwaysAllow mode.
                          Default is false.

                          Note:
                          If set to `true`, vArmor will not build Seccomp profile for the target workloads.
                        type: boolean
                      syscallRawRules:
                        description: |-
                          syscallRawRules is used to set the custom syscalls blocklist rules with Seccomp enforcer.
                          Please refer to https://github.com/opencontainers/runtime-spec/blob/main/config-linux.md#seccomp
                          to create custom rules.
                        items:
                          description: LinuxSyscall is used to match a syscall in
                            Seccomp
                          properties:
                            action:
                              description: LinuxSeccompAction taken upon Seccomp rule
                                match
                              type: string
                            args:
                              items:
                                description: LinuxSeccompArg used for matching specific
                                  syscall arguments in Seccomp
                                properties:
                                  index:
                                    type: integer
                                  op:
                                    description: LinuxSeccompOperator used to match
                                      syscall arguments in Seccomp
                                    type: string
                                  value:
                                    format: int64
                                    type: integer
                                  valueTwo:
                                    format: int64
                                    type: integer
                                required:
                                - index
                                - op
                                - value
                                type: object
                              type: array
                            errnoRet:
                              type: integer
                            names:
                              items:
                                type: string
                              type: array
                          required:
                          - action
                          - names
                          type: object
                        type: array
                      vulMitigationRules:
                        description: vulMitigationRules are used to specify the built-in
                          vulnerability mitigation rules.
                        items:
                          type: string
                        type: array
                    type: object
                  mode:
                    description: |-
                      mode used to specify the protection mode.
                      Available values: AlwaysAllow, RuntimeDefault, EnhanceProtect, BehaviorModeling, DefenseInDepth

                      Note:
                      BehaviorModeling and DefenseInDepth modes are experimental features and currently only work
                      with AppArmor and Seccomp enforcers.
                    type: string
                  modelingOptions:
                    description: modelingOptions configures the BehaviorModeling mode.
                    properties:
                      duration:
                        description: duration is the duration in minutes to modeling
                        type: integer
                    required:
                    - duration
                    type: object
                required:
                - enforcer
                - mode
                type: object
              target:
                description: target specifies the workloads and their containers you
                  want to harden.
                properties:
                  containers:
                    description: |-
                      containers are used to specify the names of the containers. If it is empty, sandbox protection
                      will be enabled for all containers within the workload (excluding initContainers and ephemeralContainers).
                    items:
                      type: string
                    type: array
                  kind:
                    description: |-
                      kind is used to specify the type of workloads for the protection targets.
                      Available values: Deployment, StatefulSet, DaemonSet, Pod.
                    type: string
                  name:
                    description: |-
                      name is used to specify a specific workload in the policy's namespace or all namespace.
                      Note that the name field and selector field are mutually exclusive.
                    type: string
                  selector:
                    description: |-
                      selector is a label selector which selects workloads in the policy's namespace or all namespace.
                      This field follows standard label selector semantics.
                      Note that the selector field and name field are mutually exclusive.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - kind
                type: object
              updateExistingWorkloads:
                description: |-
                  updateExistingWorkloads is used to indicate whether to perform a rolling update on target existing workloads,
                  thus enabling or disabling the protection of the target workloads when policies are created or deleted.
                  Default is false.

                  Note:
                  vArmor only performs a rolling update on Deployment, StatefulSet, or DaemonSet type workloads.
                  If `.spec.target.kind` is Pod, you need to rebuild the Pod yourself to enable or disable protection.
                type: boolean
            required:
            - policy
            - target
            type: object
          status:
            description: status describes the observed status of the policy.
            properties:
              conditions:
                description: |-
                  conditions is a list of conditions that indicate the status of the policy.
                  It can include conditions such as Created, Updated, Ready, etc.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: |-
                        Status of the condition.
                        Possible values: True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition.
                        Possible values: Created, Updated, Ready.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: |-
                  phase is used to indicate the processing phase of the policy.
                  Possible values: Pending, Modeling, Completed, Protecting, Error.

                  Note:
                  You can find out which varmor-agent has an error by getting the ArmorProfile/status resource
                  corresponding to the current VarmorPolicy or VarmorClusterPolicy object.
                type: string
              profileName:
                description: |-
                  profileName is the name of the AppArmor, BPF and Seccomp profile that is generated by the policy.
                  It is in the format of "varmor-{namespace}-{name}" for namespaced policies or "varmor-cluster-{namespace}-{name}"
                  for cluster-scoped policies.
                  It is equivalent to the name of the ArmorProfile object that is created by the policy.
                type: string
              ready:
                description: ready is used to indicate whether the profile of policy
                  is loaded.
                type: boolean
            required:
            - profileName
            - ready
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
